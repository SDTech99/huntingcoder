{
  "title": "Understanding TypeScript Basics in 15 Minutes",
  "author": "Dawar bhai",
  "content": "TypeScript is a strongly typed superset of JavaScript developed by Microsoft. It compiles to plain JavaScript and helps catch errors during development. This guide will help you get started quickly.\n\n---\n\n## 1. What is TypeScript?\nTypeScript adds static typing to JavaScript. It helps you write safer and more maintainable code.\n\n---\n\n## 2. Installing TypeScript\nInstall globally:\n```bash\nnpm install -g typescript\n```\nCheck version:\n```bash\ntsc --version\n```\n\n---\n\n## 3. Your First TypeScript File\nCreate a file:\n```ts\n// hello.ts\nlet message: string = 'Hello, TypeScript!';\nconsole.log(message);\n```\nCompile and run:\n```bash\ntsc hello.ts\nnode hello.js\n```\n\n---\n\n## 4. Type Annotations\n```ts\nlet age: number = 25;\nlet name: string = 'Dawar';\nlet isActive: boolean = true;\n```\n\n---\n\n## 5. Arrays and Tuples\n```ts\nlet numbers: number[] = [1, 2, 3];\nlet person: [string, number] = ['John', 30];\n```\n\n---\n\n## 6. Functions\n```ts\nfunction greet(name: string): string {\n  return 'Hello, ' + name;\n}\n```\nOptional and default parameters:\n```ts\nfunction log(msg: string = 'Hi'): void {\n  console.log(msg);\n}\n```\n\n---\n\n## 7. Interfaces\n```ts\ninterface User {\n  name: string;\n  age: number;\n}\n\nlet user: User = { name: 'Alice', age: 24 };\n```\n\n---\n\n## 8. Classes\n```ts\nclass Car {\n  constructor(public brand: string) {}\n  drive() {\n    console.log(`${this.brand} is driving.`);\n  }\n}\n\nlet car = new Car('Toyota');\ncar.drive();\n```\n\n---\n\n## 9. Enums\n```ts\nenum Direction {\n  Up,\n  Down,\n  Left,\n  Right\n}\n\nlet dir: Direction = Direction.Left;\n```\n\n---\n\n## 10. Type Inference & Union Types\n```ts\nlet score = 99; // inferred as number\nlet value: string | number = 'A+';\nvalue = 100;\n```\n\n---\n\n## 11. Generics\n```ts\nfunction identity<T>(arg: T): T {\n  return arg;\n}\n\nlet output = identity<string>('Hello');\n```\n\n---\n\n## 12. TypeScript with Node.js\nInitialize:\n```bash\nnpm init -y\nnpm install typescript ts-node @types/node --save-dev\n```\nRun TypeScript directly:\n```bash\nnpx ts-node app.ts\n```\n\n---\n\n## 13. tsconfig.json\nCreate config:\n```bash\ntsc --init\n```\nBasic example:\n```json\n{\n  \"compilerOptions\": {\n    \"target\": \"es6\",\n    \"module\": \"commonjs\",\n    \"strict\": true\n  }\n}\n```\n\n---\n\n## Final Thoughts\nTypeScript boosts productivity, especially in large-scale applications. Focus on types, interfaces, and classes to master it.\n\n**Keep practicing! â€” Dawar bhai**"
}

