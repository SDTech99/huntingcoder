{
  "title": "Node.js & Express Crash Course",
  "author": "Dawar bhai",
  "content": "Want to build powerful backend APIs? **Node.js** (JavaScript runtime) and **Express** (minimal web framework) make it super simple.\n\n---\n\n## 1. Initialize Your Project\n```bash\nmkdir my-api\ncd my-api\nnpm init -y\nnpm install express mongoose\n```\n\n---\n\n## 2. Basic Express Server\n```js\nconst express = require('express');\nconst app = express();\n\napp.use(express.json()); // to parse JSON bodies\n\napp.get('/', (req, res) => {\n  res.send('Hello from Express!');\n});\n\napp.listen(3000, () => console.log('Server running on http://localhost:3000'));\n```\nðŸ§  Tip: Use `nodemon` for auto-reload during development.\n\n---\n\n## 3. Routes & Request Handling\n```js\napp.post('/user', (req, res) => {\n  const { name, email } = req.body;\n  console.log('User:', name, email);\n  res.json({ message: 'User data received' });\n});\n```\nðŸ›  Try this with Postman or Thunder Client (VS Code extension).\n\n---\n\n## 4. Connect to MongoDB\nInstall MongoDB locally or use MongoDB Atlas.\n```js\nconst mongoose = require('mongoose');\n\nmongoose.connect('mongodb://localhost:27017/myapp', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n}).then(() => console.log('MongoDB connected'))\n  .catch(err => console.error('Mongo error:', err));\n```\n\n---\n\n## 5. Create a Mongoose Model\n```js\nconst User = mongoose.model('User', {\n  name: String,\n  email: String\n});\n\napp.post('/register', async (req, res) => {\n  const user = await User.create(req.body);\n  res.json(user);\n});\n```\nðŸ“¦ Mongoose lets you interact with MongoDB using clean schemas and models.\n\n---\n\n## 6. Folder Structure (Recommended)\n```txt\nmy-api/\nâ”œâ”€ models/\nâ”‚  â””â”€ User.js\nâ”œâ”€ routes/\nâ”‚  â””â”€ userRoutes.js\nâ”œâ”€ index.js\n```\nKeeps your app clean and modular.\n\n---\n\n## 7. Testing Your API\n- Use **Postman**, **Thunder Client**, or `curl`\n- Test GET, POST, PUT, DELETE routes easily\n- Don't forget to set `Content-Type: application/json`\n\n---\n\n## Final Thoughts\nNode.js with Express makes backend API development fast and fun. Combine it with MongoDB to build real-world applications.\n\n**Server strong ðŸ’ª â€” Dawar bhai**"
}
