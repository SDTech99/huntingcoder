{
  "title": "Mastering Postman in Just 15 Minutes",
  "author": "Dawar bhai",
  "content": "Postman is a powerful tool for **testing, debugging, and documenting APIs**. Whether you're working with REST, GraphQL, or WebSockets, Postman makes it easy to send requests and inspect responses.\n\n---\n\n## 1. What is Postman?\nPostman is a desktop/web app used by developers to interact with APIs visually without writing code for testing endpoints.\n\n### Use Cases:\n- ✅ Test REST APIs quickly\n- ✅ Send headers, params, auth tokens\n- ✅ View response data\n- ✅ Automate tests with collections\n\n---\n\n## 2. Installing Postman\n- Download from [postman.com](https://www.postman.com/downloads/)\n- Available for Windows, Mac, Linux, and Web\n\n---\n\n## 3. Making Your First Request\n1. Open Postman\n2. Click **New → HTTP Request**\n3. Choose method: `GET`, `POST`, etc.\n4. Enter URL: `https://jsonplaceholder.typicode.com/posts/1`\n5. Click **Send**\n\nYou’ll see a JSON response:\n```json\n{\n  \"userId\": 1,\n  \"id\": 1,\n  \"title\": \"...\",\n  \"body\": \"...\"\n}\n```\n\n---\n\n## 4. Sending POST Requests\n1. Change method to `POST`\n2. Go to **Body** tab → Choose `raw` + `JSON`\n3. Add data:\n```json\n{\n  \"title\": \"Hello\",\n  \"body\": \"World\",\n  \"userId\": 1\n}\n```\n4. Click **Send**\n\nYou’ll get a success response with `id`\n\n---\n\n## 5. Setting Headers\nGo to **Headers** tab to add things like:\n```\nKey: Content-Type\nValue: application/json\n```\nOr Authorization:\n```\nKey: Authorization\nValue: Bearer <token>\n```\n\n---\n\n## 6. Query Params\nUse the **Params** tab or add directly in the URL:\n```\nhttps://api.example.com/posts?limit=5&page=2\n```\n\n---\n\n## 7. Collections\nGroup and save requests into folders:\n- Click **New → Collection**\n- Add requests under it\n- Use for organization & sharing\n\n---\n\n## 8. Environment Variables\nAvoid hardcoding URLs or tokens:\n```bash\n{{base_url}}/users/{{user_id}}\n```\nDefine variables under **Environment → Manage Environments**\n\n---\n\n## 9. Tests in Postman\nAdd test scripts using JavaScript\n```js\npm.test(\"Status code is 200\", function () {\n  pm.response.to.have.status(200);\n});\n```\nView results in **Tests** tab\n\n---\n\n## 10. Automation with Runner\n- Run all requests in a collection automatically\n- Add delays, environment, test checks\n- Useful for regression or batch testing\n\n---\n\n## 11. Mock Servers & Monitors\n- Use **Mock Servers** to simulate an API response\n- Use **Monitors** to check API uptime and correctness regularly\n\n---\n\n## 12. Importing & Exporting\nImport Swagger/OpenAPI or export your collection as JSON to share with teammates\n\n---\n\n## Final Thoughts\nPostman is a must-have tool for any API developer. It helps you **test faster**, **debug smarter**, and **document better**.\n\n**Happy Testing! — Dawar bhai**"
}
