{
  "title": "Learn Git and GitHub Fast",
  "author": "Dawar bhai",
  "content": "Git is a version control system that tracks your code changes. GitHub is an online platform to store and collaborate on Git repositories. Here‚Äôs a lightning-fast guide to get you started.\n\n## 1. What is Git?\nGit helps you:\n- Track changes in your code\n- Collaborate with others\n- Revert mistakes\n\n---\n\n## 2. Install Git\nDownload from: [https://git-scm.com](https://git-scm.com)\n```bash\ngit --version\n```\nCheck that it's installed.\n\n---\n\n## 3. Basic Git Workflow\n```bash\ngit init       # Initialize repo\ngit add .      # Stage all changes\ngit commit -m \"Initial commit\"  # Save snapshot\n```\n\n---\n\n## 4. Set Up Your Identity\n```bash\ngit config --global user.name \"Dawar bhai\"\ngit config --global user.email \"you@example.com\"\n```\n\n---\n\n## 5. GitHub Setup\n- Create a free account at [github.com](https://github.com)\n- Create a new repository\n\nConnect your local repo:\n```bash\ngit remote add origin https://github.com/yourname/repo.git\ngit push -u origin main\n```\n\n---\n\n## 6. Important Git Commands\n```bash\ngit status        # Check changes\ngit log           # View commit history\ngit diff          # See what changed\ngit clone <url>   # Copy remote repo\ngit pull          # Update from GitHub\ngit push          # Upload to GitHub\n```\n\n---\n\n## 7. Branching\n```bash\ngit branch feature-x     # Create branch\ngit checkout feature-x   # Switch branch\n# OR\ngit switch feature-x\n\ngit merge feature-x      # Merge into main\n```\n\n---\n\n## 8. Undoing Mistakes\n```bash\ngit restore <file>         # Undo file changes\ngit reset --hard HEAD~1    # Undo last commit (‚ö†Ô∏è)\n```\n\n---\n\n## 9. .gitignore File\nAvoid committing files like `node_modules`, `.env`, etc.\nExample `.gitignore`:\n```\nnode_modules/\n.env\n.DS_Store\n```\n\n---\n\n## 10. Collaborating on GitHub üí¨\n- Clone repo: `git clone <url>`\n- Make changes, commit & push\n- Open Pull Request (PR)\n- Review and merge PRs\n\n---\n\n## 11. Useful Tools\n- **GitHub Desktop** ‚Äî GUI for Git\n- **VS Code Git Panel** ‚Äî Stage, commit, push from editor\n- **GitKraken** ‚Äî Visual Git client\n\n---\n\n## 12. Practice Projects üí°\n- ‚úÖ **Portfolio Website Repo** ‚Äî Practice commits and branches\n- ‚úÖ **To-do App with PRs** ‚Äî Fork, branch, pull request\n- ‚úÖ **Team Project** ‚Äî Merge conflicts, code review\n\n---\n\n## Final Thoughts\nGit is essential for every developer. Start small, get used to versioning, and build the habit of committing often. GitHub makes it easy to share and grow with others.\n\n**Happy Committing! ‚Äî Dawar bhai**"
}
