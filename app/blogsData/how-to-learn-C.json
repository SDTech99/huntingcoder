{
  "title": "C++ Basics for Beginners with Code Snippet",
  "author": "Dawar bhai",
  "content": "C++ is a high-performance, object-oriented programming language widely used in system software, game development, and competitive programming. Hereâ€™s a beginner-friendly guide to get you started with code examples.\n\n---\n\n## 1. Hello World in C++\nStart with a simple program:\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    cout << \"Hello, World!\" << endl;\n    return 0;\n}\n```\nThis prints a message to the console.\n\n---\n\n## 2. Variables and Data Types\nC++ is statically typed. You must declare types:\n```cpp\nint age = 25;\nfloat height = 5.9;\nchar grade = 'A';\nbool isStudent = true;\n```\n\n---\n\n## 3. Input & Output\nUse `cin` for input and `cout` for output:\n```cpp\nint x;\ncout << \"Enter a number: \";\ncin >> x;\ncout << \"You entered: \" << x << endl;\n```\n\n---\n\n## 4. Conditional Statements\nUse `if`, `else if`, `else` for logic:\n```cpp\nint score = 85;\nif (score >= 90) {\n    cout << \"A grade\";\n} else if (score >= 75) {\n    cout << \"B grade\";\n} else {\n    cout << \"Needs improvement\";\n}\n```\n\n---\n\n## 5. Loops\n### âœ… For Loop:\n```cpp\nfor (int i = 1; i <= 5; i++) {\n    cout << i << endl;\n}\n```\n### âœ… While Loop:\n```cpp\nint i = 1;\nwhile (i <= 5) {\n    cout << i << endl;\n    i++;\n}\n```\n\n---\n\n## 6. Functions\nFunctions in C++ are reusable blocks of code:\n```cpp\nint add(int a, int b) {\n    return a + b;\n}\n\nint main() {\n    cout << add(5, 3); // Output: 8\n    return 0;\n}\n```\n\n---\n\n## 7. Arrays\nArrays store multiple values:\n```cpp\nint nums[3] = {1, 2, 3};\nfor (int i = 0; i < 3; i++) {\n    cout << nums[i] << endl;\n}\n```\n\n---\n\n## 8. Object-Oriented Programming\nC++ supports classes and objects:\n```cpp\nclass Car {\n  public:\n    string brand;\n    void honk() {\n      cout << \"Beep!\" << endl;\n    }\n};\n\nint main() {\n    Car c;\n    c.brand = \"Toyota\";\n    c.honk();\n    return 0;\n}\n```\n\n---\n\n## 9. Vectors (Dynamic Arrays)\n```cpp\n#include <vector>\n\nvector<int> v = {1, 2, 3};\nv.push_back(4);\nfor (int i : v) {\n    cout << i << \" \";\n}\n```\n\n---\n\n## 10. File I/O (Basic)\n```cpp\n#include <fstream>\n\nofstream outFile(\"data.txt\");\noutFile << \"Hello File!\";\noutFile.close();\n\nifstream inFile(\"data.txt\");\nstring data;\ninFile >> data;\ncout << data;\n```\n\n---\n\n## 11. Build Mini Projects ðŸ’¡\n- âœ… **Simple Calculator** â€“ Using functions\n- âœ… **To-do List (console)** â€“ Arrays or vectors\n- âœ… **Student Record System** â€“ Classes + file I/O\n\n---\n\n## 12. Compile and Run\nUse g++ to compile:\n```bash\ng++ main.cpp -o app\n./app\n```\nOr use online IDEs like [Replit](https://replit.com), [OnlineGDB](https://onlinegdb.com), etc.\n\n---\n\n## Final Thoughts\nC++ can feel verbose at first, but it's powerful, fast, and widely used in real-world applications. Practice syntax, understand OOP, and build small programs to get confident.\n\n**Happy Coding! â€” Dawar bhai**"
}
