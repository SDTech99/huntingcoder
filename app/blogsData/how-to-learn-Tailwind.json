{
  "title": "Tailwind CSS",
  "author": "Dawar bhai",
  "content": "Tailwind CSS is a utility-first CSS framework that makes building modern, responsive designs faster and easier. Instead of writing custom CSS, you apply utility classes directly in your HTML.\n\n---\n\n## 1. What is Utility-First?\nUtility-first means you style elements using pre-built classes:\n```html\n<h1 class=\"text-3xl font-bold text-blue-600\">Hello Tailwind!</h1>\n```\nThis eliminates the need to write custom CSS for most UI tasks.\n\n---\n\n## 2. Installation\nInstall via CDN (for quick testing):\n```html\n<script src=\"https://cdn.tailwindcss.com\"></script>\n```\nOr install using npm:\n```bash\nnpm install -D tailwindcss\nnpx tailwindcss init\n```\nAdd Tailwind to your CSS:\n```css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n```\n\n---\n\n## 3. Common Utility Classes\n| Purpose        | Class Example             |\n|----------------|----------------------------|\n| Text Size      | `text-xl`, `text-4xl`      |\n| Font Weight    | `font-bold`, `font-light`  |\n| Text Color     | `text-red-500`             |\n| Background     | `bg-gray-200`, `bg-blue-500` |\n| Padding/Margin | `p-4`, `m-2`, `px-6`, `py-3` |\n| Flex/Grid      | `flex`, `grid`, `justify-center` |\n\n---\n\n## 4. Responsive Design Made Easy\nTailwind uses **mobile-first** breakpoints:\n```html\n<div class=\"text-sm md:text-lg lg:text-xl\">Responsive Text</div>\n```\nClasses like `md:`, `lg:`, `xl:` apply styles at specific screen sizes.\n\n---\n\n## 5. Hover & Focus States\n```html\n<button class=\"bg-blue-500 hover:bg-blue-700 focus:outline-none text-white font-bold py-2 px-4 rounded\">\n  Click Me\n</button>\n```\nUse `hover:`, `focus:`, `active:` for interactive states.\n\n---\n\n## 6. Components with Tailwind\nYou can create custom components just using utility classes:\n```html\n<div class=\"max-w-sm rounded overflow-hidden shadow-lg p-6 bg-white\">\n  <h2 class=\"text-xl font-semibold\">Card Title</h2>\n  <p class=\"text-gray-600\">Card description here.</p>\n</div>\n```\n\n---\n\n## 7. Dark Mode Support ðŸŒ™\nEnable dark mode in `tailwind.config.js`:\n```js\nmodule.exports = {\n  darkMode: 'class', // or 'media'\n}\n```\nUse `dark:` prefix:\n```html\n<div class=\"bg-white dark:bg-gray-800 text-black dark:text-white\">\n  Dark Mode Ready\n</div>\n```\n\n---\n\n## 8. Customizing Tailwind\nIn `tailwind.config.js`, extend the theme:\n```js\nmodule.exports = {\n  theme: {\n    extend: {\n      colors: {\n        brand: '#5A67D8',\n      },\n    },\n  },\n}\n```\n\n---\n\n## 9. Tailwind Plugins\nUse community plugins to add more utilities:\n```bash\nnpm install @tailwindcss/forms @tailwindcss/typography\n```\nIn `tailwind.config.js`:\n```js\nplugins: [\n  require('@tailwindcss/forms'),\n  require('@tailwindcss/typography'),\n]\n```\n\n---\n\n## 10. Real-World Projects ðŸ’¡\n- âœ… Portfolio Website\n- âœ… Blog UI\n- âœ… Admin Dashboard\n- âœ… E-commerce Product Card\n\n---\n\n## Final Thoughts\nTailwind CSS simplifies your workflow, keeps your styles consistent, and removes the need to jump between CSS files. Once you get used to utility classes, you'll never want to go back!\n\n**Happy Designing! â€” Dawar bhai**"
}
