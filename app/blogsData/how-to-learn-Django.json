{
  "title": "Django for Absolute Beginners with Code Examples",
  "author": "Dawar bhai",
  "content": "Django is a high-level Python web framework that lets you build secure and scalable web applications quickly. It comes with everything you need — from ORM to admin dashboard. Here's your fast-track intro to Django.\n\n---\n\n## 1. What is Django?\nDjango is a **Python-based** framework for web development. It follows the **MTV (Model-Template-View)** architecture and emphasizes DRY (Don’t Repeat Yourself) principles.\n\n---\n\n## 2. Installing Django\n```bash\npip install django\n```\nVerify the installation:\n```bash\ndjango-admin --version\n```\n\n---\n\n## 3. Create Your First Project\n```bash\ndjango-admin startproject mysite\ncd mysite\npython manage.py runserver\n```\nVisit `http://127.0.0.1:8000/` to see the default Django welcome page.\n\n---\n\n## 4. Create an App\n```bash\npython manage.py startapp blog\n```\nRegister it in `mysite/settings.py`:\n```python\nINSTALLED_APPS = [\n  'blog',\n  ...\n]\n```\n\n---\n\n## 5. Views and URLs\n### ✅ `views.py`\n```python\nfrom django.http import HttpResponse\n\ndef home(request):\n    return HttpResponse(\"Hello, world!\")\n```\n### ✅ `urls.py`\nCreate `blog/urls.py`:\n```python\nfrom django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.home),\n]\n```\nInclude it in `mysite/urls.py`:\n```python\nfrom django.urls import include\n\nurlpatterns = [\n    path('', include('blog.urls')),\n]\n```\n\n---\n\n## 6. Templates (HTML Rendering)\nCreate `templates/blog/home.html`:\n```html\n<h1>Hello {{ name }}</h1>\n```\nIn `views.py`:\n```python\nfrom django.shortcuts import render\n\ndef home(request):\n    return render(request, 'blog/home.html', {'name': 'Dawar'})\n```\n\n---\n\n## 7. Models & Database (ORM)\n### ✅ Define a Model in `models.py`\n```python\nfrom django.db import models\n\nclass Post(models.Model):\n    title = models.CharField(max_length=100)\n    content = models.TextField()\n```\n### ✅ Run Migrations\n```bash\npython manage.py makemigrations\npython manage.py migrate\n```\n\n---\n\n## 8. Django Admin\nCreate a superuser:\n```bash\npython manage.py createsuperuser\n```\nRegister your model in `admin.py`:\n```python\nfrom .models import Post\nadmin.site.register(Post)\n```\nVisit `/admin` and log in.\n\n---\n\n## 9. Forms and User Input\n### ✅ Basic form in `forms.py`\n```python\nfrom django import forms\n\nclass ContactForm(forms.Form):\n    name = forms.CharField(max_length=100)\n```\n### ✅ Handle it in `views.py`\n```python\nfrom .forms import ContactForm\n\ndef contact(request):\n    form = ContactForm()\n    return render(request, 'blog/contact.html', {'form': form})\n```\n\n---\n\n## 10. Django REST Framework (Optional)\nFor APIs:\n```bash\npip install djangorestframework\n```\nAdd `'rest_framework'` to `INSTALLED_APPS`.\nCreate a simple API:\n```python\nfrom rest_framework.decorators import api_view\nfrom rest_framework.response import Response\n\n@api_view(['GET'])\ndef hello_api(request):\n    return Response({\"message\": \"Hello, API!\"})\n```\n\n---\n\n## Final Thoughts\nDjango is beginner-friendly but powerful. Master its components step by step: models, views, templates, and then explore the admin and API capabilities.\n\n**Happy Coding! — Dawar bhai**"
}
